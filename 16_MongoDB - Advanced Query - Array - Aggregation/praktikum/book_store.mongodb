use('book_store');

db.books.insertMany([
    {
        '_id': 1,
        'title': 'Wawasan Pancasila',
        'authorID': 1,
        'publisherID': 1,
        'price': 71200,
        'stats': {
            'page': 324,
            'weight': 300
        },
        'publishedAt': new Date('2018-10-01'),
        'category': [
            'social',
            'politics'
        ]
    },
    {
        '_id': 2,
        'title': 'Mata Air Keteladanan',
        'authorID': 1,
        'publisherID': 2,
        'price': 106250,
        'stats': {
            'page': 672,
            'weight': 650
        },
        'publishedAt': new Date('2017-09-01'),
        'category': [
            'social',
            'politics'
        ]
    },
    {
        '_id': 3,
        'title': 'Revolusi Pancasila',
        'authorID': 1,
        'publisherID': 1,
        'price': 54400,
        'stats': {
            'page': 200,
            'weight': 500
        },
        'publishedAt': new Date('2015-05-01'),
        'category': [
            'social',
            'politics'
        ]
    },
    {
        '_id': 4,
        'title': 'Self Driving',
        'authorID': 2,
        'publisherID': 1,
        'price': 58650,
        'stats': {
            'page': 286,
            'weight': 300
        },
        'publishedAt': new Date('2018-05-01'),
        'category': [
            'self-development'
        ]
    },
    {
        '_id': 5,
        'title': 'Self Disruption',
        'authorID': 2,
        'publisherID': 2,
        'price': 83300,
        'stats': {
            'page': 400,
            'weight': 800
        },
        'publishedAt': new Date('2018-05-01'),
        'category': [
            'self-development'
        ]
    }
]);

db.authors.insertMany([
    { '_id': 1, 'firstName': 'Yudi', 'lastName': 'Latif' },
    { '_id': 2, 'firstName': 'Rhenald', 'lastName': 'Kasali' }
]);

db.publishers.insertMany([
    { '_id': 1, 'publisherName': 'Expose' },
    { '_id': 2, 'publisherName': 'Mizan' }
]);

// 1.
db.books.aggregate([
    {
        $match: {
            $or: [
                { authorID: 1 },
                { authorID: 2 },
            ]
        }
    }
])

// 2.
db.books.aggregate([
    { $match: { authorID: 1 } },
    {
        $project: {
            _id: 1,
            title: 1,
            price: 1
        }
    }
]);

// 3.
db.books.aggregate([
    { $match: { authorID: 2 } },
    {
        $group: {
            _id: '$authorID',
            totalPages: {
                $sum: '$stats.page'
            }
        }
    }
]);

// 4.
// Cara 1
db.authors.aggregate([
    {
        $lookup: {
            from: 'books',
            localField: '_id',
            foreignField: 'authorID',
            as: 'books'
        }
    }
]);

// Cara 2
db.books.aggregate([
    {
        $lookup: {
            from: 'authors',
            localField: 'authorID',
            foreignField: '_id',
            as: 'authors'
        }
    }
]);

// 5.
db.books.aggregate([
    {
        $lookup: {
            from: 'authors',
            localField: 'authorID',
            foreignField: '_id',
            as: 'author'
        }
    },
    {
        $lookup: {
            from: 'publishers',
            localField: 'publisherID',
            foreignField: '_id',
            as: 'publisher'
        }
    }
]);

// 6.
db.books.aggregate([
    {
        $lookup: {
            from: 'authors',
            localField: 'authorID',
            foreignField: '_id',
            as: 'author'
        }
    },
    {
        $lookup: {
            from: 'publishers',
            localField: 'publisherID',
            foreignField: '_id',
            as: 'publisher'
        }
    },
    { $unwind: '$author' },
    { $unwind: '$publisher' },
    {
        $group: {
            _id: { $concat: ['$author.firstName', ' ', '$author.lastName'] },
            number_of_books: { $sum:1 },
            list_of_book: { $push : { $concat: ['$title', ' (', '$publisher.publisherName', ')'] }}
        }
    },
]);

// 7.
db.books.aggregate([
    {
        $project: {
            _id: 1,
            title: 1,
            price: 1,
            promo: {
                $switch: {
                    branches: [
                        { case: { $lt: [ '$price', 60000 ] }, then: '1%' },
                        { case: { $and: [
                            { $gt: [ '$price', 100 ] },
                            { $lt: [ '$price', 90000 ] }
                        ]}, then: '2%'},
                        { case: { $gt: [ '$price', 90000 ] }, then: '3%' },
                    ],
                    default: '0%'
                }
            }
        }
    },
]);

// 8.
db.books.aggregate([
    {
        $lookup: {
            from: 'authors',
            localField: 'authorID',
            foreignField: '_id',
            as: 'author'
        }
    },
    {
        $lookup: {
            from: 'publishers',
            localField: 'publisherID',
            foreignField: '_id',
            as: 'publisher'
        }
    },
    { $unwind: '$author' },
    { $unwind: '$publisher' },
    {
        $project: {
            title: 1,
            price: 1,
            author: {
                $concat: ['$author.firstName', ' ', '$author.lastName']
            },
            publisher: '$publisher.publisherName'
        }
    },
    {
        $sort: {
            price: -1
        }
    }
]);

// 9.
db.books.aggregate([
    {
        $unionWith: {
            coll: 'books',
            pipeline: [{
                $match: {
                    $or: [
                        {_id: 3},
                        {_id: 4},
                    ]
                }
            }]
        }
    },
    {
        $lookup: {
            from: 'publishers',
            localField: 'publisherID',
            foreignField: '_id',
            as: 'publisher'
        }
    },
    { $unwind: '$publisher' },
    {
        $project: {
            title: 1,
            price: 1,
            publisher: '$publisher.publisherName'
        }
    }
]);